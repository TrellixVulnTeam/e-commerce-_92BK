@mixin dynamic($palette, $dg:"none", $col:"yes") {
    @if ($col=="yes") {
        color: map-get($palette_dark, ninth_element);
    }

    text-decoration: none;

    &:hover {
        @if ($dg=="yes") {
            background-color: map-get($palette, second_element);
        }

        display: inline;
        color: map-get($palette, eighth_element);
        border: map-get($palette, third_element);
        transition: all 0.4s;
        outline: none;

    }

    &:active {
        @if ($dg=="yes") {
            background-color: map-get($palette, fourth_element);
        }

        display: inline;
        color: map-get($palette, eighth_element);
        border: map-get($palette, eighth_element);
        transition: all 0.4s;
        transform: scale(0.97);
        outline: none;

    }


    &:focus {
        @if ($dg=="yes") {
            background-color: map-get($palette, ninth_element);
        }

        display: inline;
        color: map-get($palette_dark, first_element);
        border: map-get($palette, third_element);
        transition: all 0.4s;
        outline: none;
    }

}



@mixin flex($direction:row, $first_position:center, $second_position:center) {
    display: flex;
    justify-content: $first_position;
    align-items: $second_position;
    flex-direction: $direction;
}



@mixin body {
    margin: 0;
    padding: 0;
    outline: 0;
    color: map-get($palette_dark, ninth_element);
    background-color: map-get($palette_dark,first_element);
    
}



@mixin head {
    background-color: map-get($palette_dark, third_element);
    position: fixed;
    width:100%;
    height: 10vh;
    z-index: 2;
    @media all  and (orientation:landscape) and (max-width:1023px) and (min-width: 375px) {
        height: 16vh;

    }

    @media all and (min-width:1024px) {
        &_main {
            &--searchI {
                display: none;
            }
        }
    }

    @media all and (max-width:1023px) and (min-width: 800px) {
        &_main {
            &--searchI {
                display: none;
            }
        }
    }

    @media all and (max-width:799px) and (min-width: 0px) {
        &_main {
            &--search {
                display: none;
            }

            &--searchI {
                display: inline-block;
            }
        }
    }

}


@mixin media($big, $medium, $small, $x_smal:$small) {

    @media all and (min-width:1024px) {
        width: $big;
    }

    @media all and (max-width:1023px) and (min-width: 800px) {
        width: $medium;
    }



    @if($x_smal !=$small) {

        @media all and (max-width:799px) and (min-width: 554px) {
            width: $small;
        }


        @media all and (max-width:555px) and (min-height:80px) {
            width: $x_smal;
        }
    }

    @else {


        @media all and (max-width:800px) and (min-width: 80px) {
            width: $small;
        }

    }

}



@mixin mediaH($big, $medium, $small, $sens:portrait) {

    @media all and (orientation: $sens) and (min-height:545px) {
        height: $big;
    }

    @media all and (orientation: $sens) and (max-height:544px) and (min-height: 375px) {
        height: $medium;
    }

    @media all and (orientation: $sens) and (max-height:375px) and (min-height: 205px) {
        height: $small;
    }

}




@mixin mediaWH($big, $medium, $small, $x_smal:$small) {

    @media all and (min-width:1024px) {
        height: $big;
    }

    @media all and (max-width:1023px) and (min-width: 800px) {
        height: $medium;
    }



    @if($x_smal !=$small) {

        @media all and (max-width:799px) and (min-width: 554px) {
            height: $small;
        }


        @media all and (max-width:555px) and (min-height:80px) {
            height: $x_smal;
        }
    }

    @else {


        @media all and (max-width:799px) and (min-width: 80px) {
            height: $small;
        }

    }

}


@mixin mediabig() {

    @media all and (min-width:1024px) {
        @content;
    }

}

@mixin mediamedium() {
    @media all  and (max-width:1023px) and (min-width: 375px) {
        @content;

    }

}


@mixin mediasmal() {
    @media all and  (max-width:375px) and (min-width: 205px) {
        @content;

    }
}

@mixin iphoneX() {
    @media all and  (width:375px) and (height:812px) {
        @content;

    }
}

@mixin no_link {
    a {
        color: map-get($palette_regular, ninth_element);
        text-decoration: none;
    }
}



@mixin link {
    a {
        color: map-get($palette_regular, fifth_element);
        text-decoration: underline;
    }
}

@mixin invalid {
    background-color: #f97b68f7;
    color: #ac0000;
}


@mixin valid {
    background-color: rgba(152, 253, 0, 0.349);
    color: green;
}